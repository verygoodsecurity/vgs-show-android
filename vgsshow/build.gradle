plugins {
    alias(libs.plugins.android.library)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.kotlin.parcelize)
    alias(libs.plugins.compose.compiler)
    alias(libs.plugins.maven.publish)
    alias(libs.plugins.dokka)
    alias(libs.plugins.detekt)
    alias(libs.plugins.kover)
}

apply from: "$rootDir/gradle/utils.gradle"

android {
    namespace 'com.verygoodsecurity.vgsshow'
    compileSdk 34

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 34
        versionCode VERSION_CODE.toInteger()
        versionName VERSION_NAME

        buildConfigField "String", "VERSION_NAME", "\"${VERSION_NAME}\""
        buildConfigField "String", "VAULT_ID", "\"${getLocalProperty("VGS_VAULT_ID")}\""

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.includeAndroidResources = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        buildConfig = true
        compose true
    }
}

detekt {
    buildUponDefaultConfig = false
    allRules = false
    config = files("$project.rootDir/.detekt/config.yml")
}

dependencies {
    implementation project(':vgs-sdk-analytics:analytics')

    implementation libs.androidx.appcompat
    implementation libs.androidx.core.ktx

    implementation libs.compose.material

    // Http
    api libs.okhttp

    // PDF viewer.
    // NOTE: Used by VGSPDFView. Consumer should add this dependency by itself as it has big size.
    compileOnly libs.verygoodsecurity.pdf.viewer

    testImplementation testLibs.junit
    testImplementation testLibs.json
    testImplementation testLibs.robolectric
    testImplementation testLibs.mockk
    testImplementation testLibs.mockk
    testImplementation libs.verygoodsecurity.pdf.viewer
}

tasks.named("dokkaHtml") {
    outputDirectory.set(rootProject.file('docs'))
}